#!/bin/sh
# Â© Copyright 2018 JSS & Hayer - http://www.jsshayer.hu

set -e

quit () {
    [ -e $tmpdir/.tplink-get-config-tempdir ] && rm -rf $tmpdir || true
    [ "$1" = "" ] && exit 0 || true
    echo "$1" >&2
    exit 1
}

usage () {
    cat <<USAGE
TP-Link device config downloader by JSS&Hayer

usage:   tplink-get-config <device type> <output file> <host> <user> <password>
example: tplink-get-config sg3424 /var/backup/switch.cfg 192.168.0.1 admin verysecret

Device types:
 sg3424    - TP-Link TL-SG3424P Gigabit POE switch, or similar
 t1600g    - TP-Link T1600G-28TS switch, T2600G, or similar

USAGE
}

if [ "$5" = "" ]; then
    usage
    exit 1
fi

device=$1
output=$2
host=$3
user=$4
password=$5

tmpdir=$(mktemp -d)
touch $tmpdir/.tplink-get-config-tempdir
oldpwd="$(pwd)"
cd $tmpdir

# TP-Link SG3424 or similar
do_sg3424 () {
    # Login
    curl -sS -X POST -d "username=$user&password=$password&logon=Login" http://$host/logon/LogonRpm.htm >response_login
    if ! head -n 10 response_login |grep -q $user; then
        quit "Login failed"
    fi

    # Fetch
    curl -sS http://$host/userRpm/Config.cfg >response_config
    if ! head -n 1 response_config |grep -qe '^\!'; then
        quit "Login success, but can't fetch the config"
    fi

    # Logout
    curl -sS http://$host/userRpm/Logout.html >response_logout

    # Write output
    cd "$oldpwd"
    cat $tmpdir/response_config >$output
    quit
}

# TP-Link T1600G, T2600G or similar
do_t1600g () {
    # Login
    curl -sS -X POST \
        -H 'Content-type: application/json' \
        -d "{\"username\": \"$user\", \"password\": \"$password\", \"operation\": \"write\"}" \
        http://$host/data/login.json \
        >response_login

    if head -n 1 response_login |grep -q '"success":false'; then
        quit "Username or password is incorrect"
    fi

    if ! head -n 1 response_login |grep -q '"success":true'; then
        cat response_login
        quit "Unknown content received from switch"
    fi

    # token example: "_tid_=e1b162357533a10c&usrLvl=3"
    local tid=$(cat response_login | awk -F'"_tid_":"' {'print $2'} | awk -F'"' {'print $1'})
    local usrLvl=$(cat response_login | awk -F'"usrLvl":' {'print $2'} | awk -F'}' {'print $1'})
    local token="_tid_=$tid&usrLvl=$usrLvl"

    # "http://127.0.0.1/data/sysConfigBackup.cfg?operation=write&unit_id=1&_tid_=2e9bc1231abcdb6e&usrLvl=3
    url="http://$host/data/sysConfigBackup.cfg?operation=write&unit_id=1&$token"

    # Fetch
    curl -sS "$url" >response_config
    if ! head -n 1 response_config |grep -qe '^\!'; then
        quit "Login success, but can't fetch the config"
    fi

    # Logout
    curl -sS -X POST "http://$host/data/logout.json?$token" >response_logout

    # Write output
    cd "$oldpwd"
    cat $tmpdir/response_config >$output
    quit
}

case $device in
    sg3424)             do_sg3424                       ;;
    t1600g)             do_t1600g                       ;;
    *)                  usage; quit 'Unknown device!'   ;;
esac

